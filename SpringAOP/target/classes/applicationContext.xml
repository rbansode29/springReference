<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:annotation-config />

	<aop:aspectj-autoproxy />
	<!-- <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" 
		/> -->

	<bean name="circle" class="com.example.demo.model.Circle"
		id="circle">
		<constructor-arg value="circle" />
	</bean>

	<bean name="triangle" class="com.example.demo.model.Triangle"
		id="triangle">
		<constructor-arg value="triangle" />
	</bean>

	<bean name="shapeService"
		class="com.example.demo.service.impl.ShapeServiceImpl"
		autowire="byName" />

	<!-- <bean name="pointcutExampleAspect" id="pointcutExampleAspect" class="com.example.demo.aspect.PointcutExampleAspect" 
		/> <bean name="beforeAdvice" id="beforeAdvice" class="com.example.demo.aspect.BeforeAdviceExample" 
		/> <bean name="afterAdvice" id="afterAdvice" class="com.example.demo.aspect.AfterAdviceExample" 
		/> <bean name="afterReturningAdvice" id="afterReturningAdvice" class="com.example.demo.aspect.AfterReturningAdviceExample" 
		/> <bean name="afterThrowingAdvice" id="afterThrowingAdvice" class="com.example.demo.aspect.AfterThrowingAdviceExample" 
		/> <bean name="afterReturningAdvice" id="afterReturningAdvice" class="com.example.demo.aspect.AfterReturningAdviceExample" 
		/> <bean name="afterThrowingAdvice" id="afterThrowingAdvice" class="com.example.demo.aspect.AfterThrowingAdviceExample" 
		/> <bean name="aroundAdvice" id="aroundAdvice" class="com.example.demo.aspect.AroundAdviceExample" 
		/> <bean name="aroundAdvice" id="aroundAdvice" class="com.example.demo.aspect.AroundAdviceExample" 
		/> Using XMl based configuration <aop:config> <aop:aspect id="aroundAspect" 
		ref="aroundAdvice"> <aop:pointcut expression="execution( * com.example.demo.model.Circle.get*())" 
		id="allGetter" /> <aop:around method="aroundAdvice" pointcut-ref="allGetter" 
		/> <aop:around method="aroundAdvice" pointcut="execution( * com.example.demo.model.Circle.get*())" 
		/> </aop:aspect> </aop:config> -->

	<bean name="loggingAspect" id="loggingAspect"
		class="com.example.demo.aspect.LoggerAspect" />




</beans>
